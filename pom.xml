<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.github.rwitzel</groupId>
  <artifactId>java8paranamer</artifactId>
  <version>0.0.1-SNAPSHOT</version>

   <prerequisites>
     <maven>3.0.0</maven>
   </prerequisites>
   
  <properties>
    <java-version>1.8</java-version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <spring>4.0.7.RELEASE</spring>
    <jackson-2-version>2.4.3</jackson-2-version>
    <ektorp.version>1.4.2</ektorp.version>
    <org.slf4j-version>1.7.7</org.slf4j-version>

  </properties>

  <name>${project.groupId}:${project.artifactId}</name>
  <url>https://github.com/rwitzel/Java8Paranamer</url>
  <description>Paranamer for Java8</description>

  <scm>
    <connection>scm:git:https://github.com/rwitzel/Java8Paranamer.git</connection>
    <developerConnection>scm:git:git@github.com:rwitzel/Java8Paranamer.git</developerConnection>
    <url>https://github.com/rwitzel/Java8Paranamer/</url>
    <tag>HEAD</tag>
  </scm>

  <dependencies>

    <dependency>
        <groupId>com.thoughtworks.paranamer</groupId>
        <artifactId>paranamer</artifactId>
        <version>2.7</version>
    </dependency>

    <!-- test scope -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-framework-bom</artifactId>
        <version>${spring}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

    </dependencies>
  </dependencyManagement>


  <build>
  
   <plugins>

     <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-compiler-plugin</artifactId>
      <version>3.2</version>
      <configuration>
        <source>${java-version}</source>
        <target>${java-version}</target>
        <compilerArgument>-parameters</compilerArgument>
      </configuration>
    </plugin>
    
   </plugins>

  </build>


  <profiles>
  
    <profile>
      <id>coverage</id>
    
      <build>
         <plugins>
            <plugin>
              <groupId>org.eluder.coveralls</groupId>
              <artifactId>coveralls-maven-plugin</artifactId>
              <version>3.0.1</version>
            </plugin>
            <plugin>
              <groupId>org.jacoco</groupId>
              <artifactId>jacoco-maven-plugin</artifactId>
              <version>0.7.2.201409121644</version>
              <executions>
                <execution>
                  <id>prepare-agent</id>
                  <goals>
                    <goal>prepare-agent</goal>
                  </goals>
                </execution>
                <execution>
                  <id>report</id>
                  <goals>
                    <goal>report</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>

         </plugins> 
      
      </build>  
    </profile>
    
    <profile>
      <id>release</id>
    
      <build>
        <plugins>
      
          <!-- generate sources (they are needed for the release to maven central) --> 
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>2.4</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
      
          <!-- generate javadocs (they are needed for the release to maven central) --> 
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>2.10.1</version>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <!-- artefacts must be signed when released to maven central) --> 
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.5</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>1.6.3</version>
            <extensions>true</extensions>
            <configuration>
               <serverId>ossrh</serverId>
               <nexusUrl>https://oss.sonatype.org/</nexusUrl>
               <!-- false allows us to inspect the release before it is transferred to Maven Central -->
               <autoReleaseAfterClose>false</autoReleaseAfterClose>
            </configuration>
          </plugin>

        </plugins>
      </build>
    
    </profile>
  
  </profiles>

  <distributionManagement>
    
    <!--
      Deploy snapshot via 
      
        mvn  deploy -DskipTests -Prelease 
      
      to
      
        https://oss.sonatype.org/content/repositories/snapshots/com/github/rwitzel/couchrepository-core/ 
      -->
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>

    <!-- 
      Deploy a release (not a snapshot) (release plugin is not involved) via
      
        mvn versions:set -DnewVersion=1.2.3 // your new version
        mvn clean deploy -Prelease
        mvn nexus-staging:release -DstagingRepositoryId=foo // release to maven central, or to drop: mvn nexus-staging:drop
        ... etc. // see http://central.sonatype.org/pages/apache-maven.html#performing-a-release-deployment
    
       -->    
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

  <licenses>
    <license>
      <name>Apache 2</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>rwitzel</id>
      <name>Rodrigo Witzel</name>
      <email>rwitzel75@googlemail.com</email>
    </developer>
  </developers>

</project>